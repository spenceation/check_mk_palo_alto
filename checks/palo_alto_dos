#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2015             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# tails. You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.
#
# Author: spenceation@hotmail.com
# Website: https://github.com/spenceation/check_mk_palo_alto
#


def inventory_palo_alto_dos(parsed):
    return [(None, None)]


def check_palo_alto_dos(item, params, parsed):
    if params == None:
        params = {}
    now = time.time()

    panFlowDosAgMaxSessLimit, panFlowDosBlkNumEntries, panFlowDosClMaxSessLimit = map(int, parsed[0])

    panFlowDosAgMaxSessLimit_rate = get_rate('panFlowDosAgMaxSessLimit', now, panFlowDosAgMaxSessLimit)
    panFlowDosClMaxSessLimit_rate = get_rate('panFlowDosClMaxSessLimit', now, panFlowDosClMaxSessLimit)

    infotext = "DoS Session Limit reaches: %d aggregated, %d classified." % \
               (panFlowDosAgMaxSessLimit_rate, panFlowDosClMaxSessLimit_rate)
    infotext += " %d entries in the DoS block table." % \
                (panFlowDosBlkNumEntries)

    perfdata = [("dos_block_table_entries", panFlowDosBlkNumEntries),
                ("aggregated_session_limit_reaches", panFlowDosAgMaxSessLimit_rate),
                ("classified_session_limit_reaches", panFlowDosClMaxSessLimit_rate),
                ]

    status = 0

    if panFlowDosBlkNumEntries > 0:
        status = 2
    elif panFlowDosAgMaxSessLimit_rate > 0:
        status = 1
    elif panFlowDosClMaxSessLimit_rate > 0:
        status = 1
    else:
        status = 0

    return status, infotext, perfdata


check_info["palo_alto_dos"] = {
    "default_levels_variable"   : "palo_alto_dos",
    "inventory_function"        : inventory_palo_alto_dos,
    "check_function"            : check_palo_alto_dos,
    "service_description"       : "Denial of Service",
    "snmp_info"                 : ( ".1.3.6.1.4.1.25461.2.1.2.1.19.8", [
                                            "1",  # panFlowDosAgMaxSessLimit (Session limit reached for aggregate)
                                            "2",  # panFlowDosBlkNumEntries (Number of entries in DOS block table)
                                            "3",  # panFlowDosClMaxSessLimit (Session limit reached for classified)
    ] ),
    "snmp_scan_function"        : lambda oid: "25461" in oid(".1.3.6.1.2.1.1.2.0"),
    "has_perfdata"              : True,
    "group"                     : "palo_alto_dos",
}
